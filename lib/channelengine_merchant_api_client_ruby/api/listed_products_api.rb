=begin
#ChannelEngine Merchant API

#ChannelEngine API for merchants

The version of the OpenAPI document: 2.9.9

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.1

=end

require 'cgi'

module ChannelEngineMerchantApiClient
  class ListedProductsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get Listed Products
    # Gets the status of products listed for channel (export status) and on a channel (channel status).<br />Includes products that were previously deleted from but are now set to be created again.<br />Note: not all channels provide adequate options to retrieve the status on the channel.
    # @param channel_id [Integer] The id of a channel
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page The page to filter on. Starts at 1.
    # @return [CollectionOfChannelListedProductResponse]
    def listed_product_get_by_filter(channel_id, opts = {})
      data, _status_code, _headers = listed_product_get_by_filter_with_http_info(channel_id, opts)
      data
    end

    # Get Listed Products
    # Gets the status of products listed for channel (export status) and on a channel (channel status).&lt;br /&gt;Includes products that were previously deleted from but are now set to be created again.&lt;br /&gt;Note: not all channels provide adequate options to retrieve the status on the channel.
    # @param channel_id [Integer] The id of a channel
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page The page to filter on. Starts at 1.
    # @return [Array<(CollectionOfChannelListedProductResponse, Integer, Hash)>] CollectionOfChannelListedProductResponse data, response status code and response headers
    def listed_product_get_by_filter_with_http_info(channel_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ListedProductsApi.listed_product_get_by_filter ...'
      end
      # verify the required parameter 'channel_id' is set
      if @api_client.config.client_side_validation && channel_id.nil?
        fail ArgumentError, "Missing the required parameter 'channel_id' when calling ListedProductsApi.listed_product_get_by_filter"
      end
      # resource path
      local_var_path = '/v2/channels/{channelId}/products'.sub('{' + 'channelId' + '}', CGI.escape(channel_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'CollectionOfChannelListedProductResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey']

      new_options = opts.merge(
        :operation => :"ListedProductsApi.listed_product_get_by_filter",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ListedProductsApi#listed_product_get_by_filter\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
