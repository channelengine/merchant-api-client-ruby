=begin
#ChannelEngine Merchant API

#ChannelEngine API for merchants

The version of the OpenAPI document: 2.13.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.0.0-SNAPSHOT

=end

require 'cgi'

module ChannelEngineMerchantApiClient
  class CancellationApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create Cancellation.
    # Mark (part of) an order as cancelled.
    # @param [Hash] opts the optional parameters
    # @option opts [MerchantCancellationRequest] :merchant_cancellation_request 
    # @return [ApiResponse]
    def cancellation_create(opts = {})
      data, _status_code, _headers = cancellation_create_with_http_info(opts)
      data
    end

    # Create Cancellation.
    # Mark (part of) an order as cancelled.
    # @param [Hash] opts the optional parameters
    # @option opts [MerchantCancellationRequest] :merchant_cancellation_request 
    # @return [Array<(ApiResponse, Integer, Hash)>] ApiResponse data, response status code and response headers
    def cancellation_create_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CancellationApi.cancellation_create ...'
      end
      # resource path
      local_var_path = '/v2/cancellations'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json-patch+json', 'application/json', 'application/*+json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'merchant_cancellation_request'])

      # return_type
      return_type = opts[:debug_return_type] || 'ApiResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey']

      new_options = opts.merge(
        :operation => :"CancellationApi.cancellation_create",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CancellationApi#cancellation_create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Cancellations.
    # Gets cancellations created since the supplied date.
    # @param [Hash] opts the optional parameters
    # @option opts [Time] :created_since Filter on the create date of the cancellation in ChannelEngine, starting from this date. This date is inclusive.
    # @option opts [Integer] :page The page to filter on. Starts at 1.
    # @return [CollectionOfMerchantCancellationResponse]
    def cancellation_get_for_merchant(opts = {})
      data, _status_code, _headers = cancellation_get_for_merchant_with_http_info(opts)
      data
    end

    # Get Cancellations.
    # Gets cancellations created since the supplied date.
    # @param [Hash] opts the optional parameters
    # @option opts [Time] :created_since Filter on the create date of the cancellation in ChannelEngine, starting from this date. This date is inclusive.
    # @option opts [Integer] :page The page to filter on. Starts at 1.
    # @return [Array<(CollectionOfMerchantCancellationResponse, Integer, Hash)>] CollectionOfMerchantCancellationResponse data, response status code and response headers
    def cancellation_get_for_merchant_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CancellationApi.cancellation_get_for_merchant ...'
      end
      # resource path
      local_var_path = '/v2/cancellations/merchant'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'createdSince'] = opts[:'created_since'] if !opts[:'created_since'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'CollectionOfMerchantCancellationResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiKey']

      new_options = opts.merge(
        :operation => :"CancellationApi.cancellation_get_for_merchant",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CancellationApi#cancellation_get_for_merchant\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
